#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('modules/client.py'): {34L: (0,
        None,
        1,
        0),
        39L: (0,
              None,
              1,
              0)},
                     loc('modules/trainer.py'): {121L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('main.py'): {},
                    loc('modules/client.py'): {}}
debug.show-args-dialog = {loc('main.py'): False,
                          loc('../../../VTCoursesECE/DigComm/FinalProject/escapetext.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'ntbxZFJ4OKIBUpvAsJ7WRs0Qxg'\
        'NMNq65',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(2,),
        (5,)],
                                 'selected-nodes': [(2,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/nn/modules/module.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/utils/data/sampler.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('figures/E_limitedComm.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('figures/E_limitedComm.py'),
                      'colors')]},
        loc('main.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('function def',
                                       loc('main.py'),
                                       'main')]},
        loc('modules/client.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('class def',
        loc('modules/client.py'),
        'Client')]},
        loc('modules/model.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('modules/model.py'),
        'Model')]},
        loc('modules/optimizer.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('modules/optimizer.py'),
        'SGD')]},
        loc('modules/quantizer.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('modules/quantizer.py'),
        'decode')]},
        loc('modules/trainer.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('modules/trainer.py'),
        'mkdir')]},
        loc('modules/worker.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('modules/worker.py'),
        'mseloss')]},
        loc('utils/helper_funcs.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('utils/helper_funcs.py'),
        'Metrics')]},
        loc('../../../Research/pytorch-privacy/training.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Research/pytorch-privacy/training.py'),
                      'acc')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [7],
        'notebook_display': 'normal',
        'notebook_percent': 0.2797704447632712,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'writer',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-probe',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 5438L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/nima/ECE/Summary on FL/Codes/main.py': ['s'\
        'elf.model.parameters()\n',
        'self.model.parameters()[0]\n',
        'list(self.model.parameters())\n',
        'list(self.model.parameters())[0]\n',
        'qq = list(self.model.parameters())[0]\n',
        'qq.grad\n',
        'qq = list(self.model.parameters())[0].grad\n',
        'list(self.model.parameters())[0].grad\n',
        'list(self.model.parameters())[0].grad.max\n',
        'list(self.model.parameters())[0].grad.max()\n',
        'tensor.grad\n',
        'list(self.model.parameters())[1].grad.max()\n',
        'torch.mean(loss)\n',
        'y.size(0)\n',
        'loss.item() * y.size(0)\n',
        'loss\n',
        'torch.mean(loss).item()\n',
        'train_dataloader\n',
        'qq = list(train_dataloader)\n',
        'len(qq)\n',
        'qq[0]\n',
        'qq[0][0]\n',
        'qq[0][0].shape\n',
        'qq[0][1].shape\n',
        'train_dataloader.dataset\n',
        'train_dataloader.dataset.labels\n',
        'train_dataloader.dataset.labels.shape\n',
        'train_dataloader.batch_size\n',
        'code\n',
        'qq\n',
        'np.max(local_soln - qq)\n',
        '(local_soln - qq)\n',
        'torch.abs(local_soln - qq)\n',
        "self.args['quan_level']\n",
        'encode(local_soln - self.latest_model, 100)\n',
        'code = encode(local_soln - self.latest_model, 100)\n',
        "qq = decode(code, self.args['gpu']) + self.latest_model\n",
        'torch.sum(torch.abs(local_soln - qq))\n',
        'local_soln\n',
        'torch.FloatTensor(local_soln.shape)\n',
        'torch.FloatTensor(local_soln.shape).normal_(0, 0)\n',
        'torch.FloatTensor(local_soln.shape).normal_(0, 0.1)\n',
        'torch.FloatTensor(local_soln.shape).normal_(0, 0.001)\n',
        'torch.FloatTensor(local_soln.shape).normal_(0, 100)\n',
        'list(range(0, len(10), 2))\n',
        'list(range(0, 10, 2))\n',
        'list(range(1, 10, 2))\n',
        'from torch.utils.data import RandomSampler\n',
        'RandomSampler(train_data)\n',
        'RandomSampler(train_data).data\n',
        'list(RandomSampler(train_data))\n',
        'len(list(RandomSampler(train_data)))\n',
        'len(list(RandomSampler(train_data, num_samples=10)))\n',
        'from torch.utils.data import SubsetRandomSampler\n',
        'len(list(SubsetRandomSampler(train_data, [1, 3])))\n',
        'from torch.utils.data import Subset\n',
        'len(list(Subset(train_data, [1, 3])))\n',
        'list(Subset(train_data, [1, 3]))\n',
        'list(Subset(train_data, [1, 3, 5]))\n',
        'train_data.data.shape\n',
        'list(Subset(train_data, [1:619]))\n',
        'list(Subset(train_data, [1:600]))\n',
        '1:600\n',
        'range(1:10)\n',
        'range(1,10)\n',
        'list(Subset(train_data, range(1, 10)))\n',
        'import numpy as np\n',
        'np.random.choice([1, 2, 3], 4)\n',
        'np.random.choice([1, 2, 3], 2)\n',
        'np.random.choice([1, 2, 3], 2, replace=False)\n',
        'np.random.choice(range(10), 12, replace=False)\n',
        'np.random.choice(range(10), 2, replace=False)\n',
        'train_data.data.shape[0]\n',
        '(train_data.data.shape[0] * .5)\n',
        'int(train_data.data.shape[0] * .5)\n',
        'np.random.choice(range(train_data.data.shape[0]), int(train_data.da'\
        'ta.shape[0] * .5), replace=False)\n',
        'DataLoader(train_data, batch_size=bs, shuffle=True)\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=True))\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0]\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0][15'\
        ':30]\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0][55'\
        ':70]\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0][95'\
        ':120]\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0]\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0].sh'\
        'ape\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0][0]'\
        '\n',
        'list(DataLoader(train_data, batch_size=bs, shuffle=False))[0][0][0]'\
        '[200:220]\n',
        'list(DataLoader(Subset(train_data), batch_size=bs, shuffle=False))['\
        '0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [2]), batch_size=bs, shuffle=Fal'\
        'se))[0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [1]), batch_size=bs, shuffle=Fal'\
        'se))[0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [7]), batch_size=bs, shuffle=Fal'\
        'se))[0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [7, 8]), batch_size=bs, shuffle='\
        'False))[0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [8, 7]), batch_size=bs, shuffle='\
        'False))[0][0][0][200:220]\n',
        'list(DataLoader(Subset(train_data, [8, 7]), batch_size=bs, shuffle='\
        'True))[0][0][0][200:220]\n',
        'self.clip\n',
        'self.epsilon\n',
        'np.sqrt(8 * self.gamma ** 2 * np.log(1.25 * self.gamma / self.delta'\
        ')) * self.clip / self.epsilon\n',
        '(8 * self.gamma ** 2 * np.log(1.25 * self.gamma / self.delta))\n',
        'self.gamma\n',
        'self.delta\n'],
                                   u'file:/Users/nima/Research/pytorch-privacy/training.py': ['l'\
        'oss.shape\n',
        'losses.shape\n',
        'torch.mean(loss.reshape(num_microbatches, -1), dim=1)\n',
        'j\n']},
                       'launch-id': None,
                       'sel-line': 5442L,
                       'sel-line-start': 360338L,
                       'selection_end': 360338L,
                       'selection_start': 360338L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 154L,
                       'selection_end': 154L,
                       'selection_start': 154L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('modules/client.py'),
        {'attrib-starts': [('Client|0|',
                            5),
                           ('Client|0|.__init__|0|',
                            6)],
         'code-line': '        self.cid = cid\n',
         'first-line': 2L,
         'folded-linenos': [],
         'sel-line': 7L,
         'sel-line-start': 205L,
         'selection_end': 205L,
         'selection_start': 205L,
         'zoom': 0L},
        1609985509.697566],
        [loc('main.py'),
         {'attrib-starts': [('main|0|',
                             7)],
          'code-line': "    args['subsampling'] = True\n",
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 880L,
          'selection_end': 904L,
          'selection_start': 884L,
          'zoom': 0L},
         1609985516.455906],
        [loc('modules/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             15),
                            ('Trainer|0|.__init__|0|',
                             16)],
          'code-line': '        self.\n',
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 665L,
          'selection_end': 678L,
          'selection_start': 678L,
          'zoom': 0L},
         1609985525.917491],
        [loc('main.py'),
         {'attrib-starts': [('main|0|',
                             7)],
          'code-line': "    args['subsampling_gamma'] = .5\n",
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 911L,
          'selection_end': 940L,
          'selection_start': 915L,
          'zoom': 0L},
         1609985531.300127],
        [loc('modules/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             15),
                            ('Trainer|0|.setup_clients|0|',
                             55)],
          'code-line': '                       self.subsampling, self.gamma)'\
                       '\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2039L,
          'selection_end': 2090L,
          'selection_start': 2090L,
          'zoom': 0L},
         1609985629.690422],
        [loc('modules/client.py'),
         {'attrib-starts': [('Client|0|',
                             5),
                            ('Client|0|.train_client|0|',
                             32)],
          'code-line': '        local_solution, worker_stats = self.worker.t'\
                       'rain(self.train_dataloader, **kwargs)\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1323L,
          'selection_end': 1323L,
          'selection_start': 1323L,
          'zoom': 0L},
         1609987084.158586],
        [loc('modules/worker.py'),
         {'attrib-starts': [('Worker|0|',
                             8),
                            ('Worker|0|.train|0|',
                             40)],
          'code-line': '        train_loss = train_acc = train_total = 0\n',
          'first-line': 21L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1342L,
          'selection_end': 1390L,
          'selection_start': 1390L,
          'zoom': 0L},
         1609987137.842107],
        [loc('modules/client.py'),
         {'attrib-starts': [('Client|0|',
                             5),
                            ('Client|0|.train_client|0|',
                             32)],
          'code-line': '        local_solution, worker_stats = self.worker.t'\
                       'rain(self.train_dataloader, **kwargs)\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1323L,
          'selection_end': 1323L,
          'selection_start': 1323L,
          'zoom': 0L},
         1609987145.705461],
        [loc('modules/worker.py'),
         {'attrib-starts': [('Worker|0|',
                             8),
                            ('Worker|0|.train|0|',
                             40)],
          'code-line': '            train_loss = train_acc = train_total = 0'\
                       '\n',
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 45L,
          'sel-line-start': 1445L,
          'selection_end': 1467L,
          'selection_start': 1457L,
          'zoom': 0L},
         1610000334.991881],
        [loc('modules/client.py'),
         {'attrib-starts': [('Client|0|',
                             5),
                            ('Client|0|.train_client|0|',
                             32)],
          'code-line': '            self.train_dataloader = DataLoader(Subse'\
                       't(self.train_data, ind), batch_size=self.bs, shuffle'\
                       '=True)\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1203L,
          'selection_end': 1249L,
          'selection_start': 1239L,
          'zoom': 0L},
         1610000346.131096],
        [loc('main.py'),
         {'attrib-starts': [('main|0|',
                             7)],
          'code-line': "    args['subsampling_gamma'] = .5\n",
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 911L,
          'selection_end': 940L,
          'selection_start': 915L,
          'zoom': 0L},
         1610000348.892768],
        [loc('modules/model.py'),
         {'attrib-starts': [('Model|0|',
                             5),
                            ('Model|0|.forward|0|',
                             10)],
          'code-line': '        return logit',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 304L,
          'selection_end': 324L,
          'selection_start': 324L,
          'zoom': 0L},
         1610000350.623057],
        [loc('modules/optimizer.py'),
         {'attrib-starts': [('SGD|0|',
                             4),
                            ('SGD|0|.__init__|0|',
                             5)],
          'code-line': '        if weight_decay < 0.0:\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 296L,
          'selection_end': 326L,
          'selection_start': 326L,
          'zoom': 0L},
         1610000352.168835],
        [loc('modules/quantizer.py'),
         {'attrib-starts': [],
          'code-line': 'print()',
          'first-line': 44L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 2324L,
          'selection_end': 2324L,
          'selection_start': 2324L,
          'zoom': 0L},
         1610000353.521993],
        [loc('main.py'),
         {'attrib-starts': [('main|0|',
                             7)],
          'code-line': "    args['subsampling_gamma'] = .5\n",
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 911L,
          'selection_end': 940L,
          'selection_start': 915L,
          'zoom': 0L},
         1610000355.231684],
        [loc('utils/helper_funcs.py'),
         {'attrib-starts': [('read_data|0|',
                             17)],
          'code-line': "        1. the data in the input directories are .js"\
                       "on files with keys 'users' and 'user_data'\n",
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 470L,
          'selection_end': 564L,
          'selection_start': 481L,
          'zoom': 0L},
         1610000356.983935],
        [loc('modules/quantizer.py'),
         {'attrib-starts': [],
          'code-line': 'print()',
          'first-line': 44L,
          'folded-linenos': [],
          'sel-line': 67L,
          'sel-line-start': 2324L,
          'selection_end': 2324L,
          'selection_start': 2324L,
          'zoom': 0L},
         1610000359.191452],
        [loc('modules/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             15),
                            ('Trainer|0|.setup_clients|0|',
                             55)],
          'code-line': '                       self.subsampling, self.gamma)'\
                       '\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2039L,
          'selection_end': 2090L,
          'selection_start': 2090L,
          'zoom': 0L},
         1610000361.582857],
        [loc('modules/client.py'),
         {'attrib-starts': [('Client|0|',
                             5),
                            ('Client|0|.train_client|0|',
                             32)],
          'code-line': '        local_solution, worker_stats = self.worker.t'\
                       'rain(self.train_dataloader, **kwargs)\n',
          'first-line': 20L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1323L,
          'selection_end': 1323L,
          'selection_start': 1323L,
          'zoom': 0L},
         1610000374.387968],
        [loc('modules/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             15),
                            ('Trainer|0|.aggregate|0|',
                             111)],
          'code-line': '                    sigma_ampl = np.sqrt(8 * self.ga'\
                       'mma ** 2 * np.log(1.25 * self.gamma / self.delta)) *'\
                       ' self.clip / self.epsilon\n',
          'first-line': 96L,
          'folded-linenos': [],
          'sel-line': 118L,
          'sel-line-start': 3987L,
          'selection_end': 4089L,
          'selection_start': 4027L,
          'zoom': 0L},
         1610000557.124754]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('modules/client.py'),
                               {'attrib-starts': [('Client|0|',
        5),
        ('Client|0|.train_client|0|',
         32)],
                                'code-line': '        local_solution, worker'\
        '_stats = self.worker.train(self.train_dataloader, **kwargs)\n',
                                'first-line': 20L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 1323L,
                                'selection_end': 1323L,
                                'selection_start': 1323L,
                                'zoom': 0L}),
                              (loc('figures/E_limitedComm.py'),
                               {'attrib-starts': [],
                                'code-line': "DATASET = '2_digits_per_client"\
        "'\n",
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 15L,
                                'sel-line-start': 396L,
                                'selection_end': 427L,
                                'selection_start': 427L,
                                'zoom': 0L}),
                              (loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/numpy/core/fromnumeric.py'),
                               {'attrib-starts': [('_wrapreduction|0|',
        69)],
                                'code-line': '                return reducti'\
        'on(axis=axis, out=out, **passkwargs)\n',
                                'first-line': 60L,
                                'folded-linenos': [],
                                'sel-line': 84L,
                                'sel-line-start': 2631L,
                                'selection_end': 2631L,
                                'selection_start': 2631L,
                                'zoom': 0L}),
                              (loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/functional.py'),
                               {'attrib-starts': [('norm|4|',
        1210)],
                                'code-line': '                return _VF.fro'\
        'benius_norm(input, dim=(), keepdim=keepdim)  # type: ignore\n',
                                'first-line': 1275L,
                                'folded-linenos': [],
                                'sel-line': 1289L,
                                'sel-line-start': 53361L,
                                'selection_end': 53361L,
                                'selection_start': 53361L,
                                'zoom': 0L}),
                              (loc('utils/helper_funcs.py'),
                               {'attrib-starts': [('read_data|0|',
        17)],
                                'code-line': "        1. the data in the inp"\
        "ut directories are .json files with keys 'users' and 'user_data'\n",
                                'first-line': 14L,
                                'folded-linenos': [],
                                'sel-line': 21L,
                                'sel-line-start': 470L,
                                'selection_end': 564L,
                                'selection_start': 481L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [('main|0|',
        7)],
                                'code-line': "    args['secure_delta'] = 10e"\
        "-5\n",
                                'first-line': 22L,
                                'folded-linenos': [],
                                'sel-line': 30L,
                                'sel-line-start': 781L,
                                'selection_end': 813L,
                                'selection_start': 813L,
                                'zoom': 0L}),
                              (loc('modules/model.py'),
                               {'attrib-starts': [('Model|0|',
        5),
        ('Model|0|.forward|0|',
         10)],
                                'code-line': '        return logit',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 12L,
                                'sel-line-start': 304L,
                                'selection_end': 324L,
                                'selection_start': 324L,
                                'zoom': 0L}),
                              (loc('modules/optimizer.py'),
                               {'attrib-starts': [('SGD|0|',
        4),
        ('SGD|0|.__init__|0|',
         5)],
                                'code-line': '        if weight_decay < 0.0:'\
        '\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 9L,
                                'sel-line-start': 296L,
                                'selection_end': 326L,
                                'selection_start': 326L,
                                'zoom': 0L}),
                              (loc('modules/quantizer.py'),
                               {'attrib-starts': [],
                                'code-line': 'print()',
                                'first-line': 44L,
                                'folded-linenos': [],
                                'sel-line': 67L,
                                'sel-line-start': 2324L,
                                'selection_end': 2324L,
                                'selection_start': 2324L,
                                'zoom': 0L}),
                              (loc('modules/trainer.py'),
                               {'attrib-starts': [('Trainer|0|',
        15),
        ('Trainer|0|.aggregate|0|',
         111)],
                                'code-line': '                    sigma_ampl'\
        ' = np.sqrt(8 * self.gamma ** 2 * np.log(1.25 * self.gamma / self.de'\
        'lta)) * self.clip / self.epsilon\n',
                                'first-line': 96L,
                                'folded-linenos': [],
                                'sel-line': 118L,
                                'sel-line-start': 3987L,
                                'selection_end': 4089L,
                                'selection_start': 4027L,
                                'zoom': 0L}),
                              (loc('../../../Research/pytorch-privacy/training.py'),
                               {'attrib-starts': [('train_dp|0|',
        62)],
                                'code-line': '            model.zero_grad()'\
        '\n',
                                'first-line': 24L,
                                'folded-linenos': [],
                                'sel-line': 95L,
                                'sel-line-start': 3068L,
                                'selection_end': 3095L,
                                'selection_start': 3095L,
                                'zoom': 0L}),
                              (loc('modules/worker.py'),
                               {'attrib-starts': [('Worker|0|',
        8),
        ('Worker|0|.train|0|',
         40)],
                                'code-line': '            train_loss = train'\
        '_acc = train_total = 0\n',
                                'first-line': 36L,
                                'folded-linenos': [],
                                'sel-line': 45L,
                                'sel-line-start': 1445L,
                                'selection_end': 1467L,
                                'selection_start': 1457L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('modules/client.py'),
         loc('figures/E_limitedComm.py'),
         loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/numpy/core/fromnumeric.py'),
         loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/functional.py'),
         loc('utils/helper_funcs.py'),
         loc('main.py'),
         loc('modules/model.py'),
         loc('modules/optimizer.py'),
         loc('modules/quantizer.py'),
         loc('modules/trainer.py'),
         loc('../../../Research/pytorch-privacy/training.py'),
         loc('modules/worker.py')]),
                               'open_files': [u'../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/functional.py',
        u'figures/E_limitedComm.py',
        u'../../../Research/pytorch-privacy/training.py',
        u'modules/worker.py',
        u'modules/model.py',
        u'modules/optimizer.py',
        u'utils/helper_funcs.py',
        u'modules/quantizer.py',
        u'modules/client.py',
        u'modules/trainer.py',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           7),
                          1610000380.91089),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1609953839.415596),
                 'user_data': {}},
        'window-alloc': (-402,
                         -999,
                         1420,
                         790)}]}
guimgr.recent-documents = [loc('main.py'),
                           loc('modules/trainer.py'),
                           loc('modules/client.py'),
                           loc('modules/quantizer.py'),
                           loc('utils/helper_funcs.py'),
                           loc('modules/optimizer.py'),
                           loc('modules/model.py'),
                           loc('modules/worker.py'),
                           loc('../../../Research/pytorch-privacy/training.py'),
                           loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/numpy/core/fromnumeric.py'),
                           loc('figures/E_limitedComm.py')]
guimgr.visual-state = {loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/nn/modules/module.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          177),
                         ('Module|0|.train|0|',
                          1259)],
        'code-line': '    def train(self: T, mode: bool = True) -> T:\n',
        'first-line': 1273L,
        'folded-linenos': [],
        'sel-line': 1259L,
        'sel-line-start': 52648L,
        'selection_end': 52661L,
        'selection_start': 52656L,
        'zoom': 0L},
                       loc('../../../.pyenv/versions/3.7.9/lib/python3.7/site-packages/torch/utils/data/sampler.py'): {'a'\
        'ttrib-starts': [('RandomSampler|0|',
                          72),
                         ('RandomSampler|0|.__len__|0|',
                          126)],
        'code-line': '    def __len__(self):\n',
        'first-line': 121L,
        'folded-linenos': [],
        'sel-line': 126L,
        'sel-line-start': 5218L,
        'selection_end': 5240L,
        'selection_start': 5240L,
        'zoom': 0L},
                       loc('data/mnist/generate_data.py'): {'attrib-starts': [('m'\
        'ain|0|',
        74)],
        'code-line': "            train_data['user_data'][i] = {'x': train_X"\
                     "[i], 'y': train_y[i]}\n",
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 156L,
        'sel-line-start': 5525L,
        'selection_end': 5574L,
        'selection_start': 5574L,
        'zoom': 0L},
                       loc('figures/2_digits_E.pdf'): {'attrib-starts': [],
        'code-line': '%PDF-1.4\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('main|0|',
        7)],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 695L,
        'selection_end': 695L,
        'selection_start': 695L,
        'zoom': 0L},
                       loc('modules/client.py'): {'attrib-starts': [('Client'\
        '|0|',
        3),
        ('Client|0|.__init__|0|',
         4)],
        'code-line': '        self.worker = worker\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 143L,
        'selection_end': 171L,
        'selection_start': 171L,
        'zoom': 0L},
                       loc('modules/model.py'): {'attrib-starts': [('Model|0'\
        '|',
        5)],
        'code-line': 'class Model(nn.Module):\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 84L,
        'selection_end': 324L,
        'selection_start': 84L,
        'zoom': 0L},
                       loc('modules/optimizer.py'): {'attrib-starts': [('SGD'\
        '|0|',
        4),
        ('SGD|0|.__init__|0|',
         5)],
        'code-line': '        if weight_decay < 0.0:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 296L,
        'selection_end': 326L,
        'selection_start': 326L,
        'zoom': 0L},
                       loc('modules/quantizer.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np\n',
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('modules/trainer.py'): {'attrib-starts': [],
        'code-line': 'from modules.optimizer import SGD\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 135L,
        'selection_end': 168L,
        'selection_start': 168L,
        'zoom': 0L},
                       loc('modules/worker.py'): {'attrib-starts': [],
        'code-line': 'from utils.torch_utils import get_flat_params_from, se'\
                     't_flat_params_to\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 36L,
        'selection_end': 55L,
        'selection_start': 55L,
        'zoom': 0L},
                       loc('utils/helper_funcs.py'): {'attrib-starts': [],
        'code-line': 'import time\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 55L,
        'selection_end': 66L,
        'selection_start': 66L,
        'zoom': 0L},
                       loc('utils/torch_utils.py'): {'attrib-starts': [('get'\
        '_out_dim|0|',
        103)],
        'code-line': '\n',
        'first-line': 104L,
        'folded-linenos': [],
        'sel-line': 110L,
        'sel-line-start': 2860L,
        'selection_end': 2860L,
        'selection_start': 2860L,
        'zoom': 0L},
                       loc('../../../SANDBOX/junk/untitled-1.py'): {'attrib-'\
        'starts': [],
        'code-line': "#orig = q['Original']\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 225L,
        'selection_end': 246L,
        'selection_start': 246L,
        'zoom': 0L},
                       loc('../../../VTCoursesECE/DigComm/DesignProjects/Project2/Project_2/DesignProject1.mat'): {'a'\
        'ttrib-starts': [],
        'code-line': "\xef\xbf\xbd\xea\xba\xb4\xef\xbf\xbd%\xef\xbf\xbd ?\xef"\
                     "\xbf\xbd\x10\xef\xbf\xbd\x10\xef\xbf\xbd\xef\xbf\xbd/?"\
                     "\xef\xbf\xbdI%\xef\xbf\xbd\x1d\xef\xbf\xbd,?\xef\xbf\xbd"\
                     "\x1c\x14\xef\xbf\xbd \xef\xbf\xbd\x1d\xef\xbf\xbd\xef"\
                     "\xbf\xbdT=R\xef\xbf\xbd\xef\xbf\xbdL\xef\xbf\xbd\xef\xbf"\
                     "\xbdhB\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd_\xef\xbf\xbd"\
                     "\xef\xbf\xbds\tV{\xef\xbf\xbdi\xef\xbf\xbdK\xef\xbf\xbd"\
                     "\xef\xbf\xbd)\x11\x12r\xef\xbf\xbdA\xef\xbf\xbd\xef\xbf"\
                     "\xbdP,\"w\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf"\
                     "\xbd,\xef\xbf\xbd\xef\xbf\xbd{\xef\xbf\xbd\xef\xbf\xbd"\
                     "\x0e66\xef\xbf\xbdu\x7f\xef\xbf\xbd\xef\xbf\xbd'0!\xef"\
                     "\xbf\xbd\x04\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf"\
                     "\xbd\xef\xbf\xbd*\x03\x0b\xef\xbf\xbd\xef\xbf\xbd\x0e"\
                     "\xef\xbf\xbd\xef\xbf\xbd\xcc\xbeT\xef\xbf\xbd\xef\xbf"\
                     "\xbd\xef\xbf\xbd.Z\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd"\
                     "}\xef\xbf\xbd\xef\xbf\xbdgR\xd4\xb3\xef\xbf\xbdy\xef\xbf"\
                     "\xbd5\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbdBGt\xef\xbf\xbd"\
                     "\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbdO\x13"\
                     "l\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd'\xef\xbf\xbd\t\xef"\
                     "\xbf\xbd\\\xef\xbf\xbd\xef\xbf\xbd\x11Cs\xef\xbf\xbd\x14"\
                     "\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd,\xef\xbf\xbd)\xef"\
                     "\xbf\xbd?[?\xef\xbf\xbd2\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 3827L,
        'selection_end': 3908L,
        'selection_start': 3908L,
        'zoom': 0L},
                       loc('../../../VTCoursesECE/DigComm/FinalProject/escapetext.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "            sw = '\\\\randomize{%s}' % ss\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 444L,
        'selection_end': 483L,
        'selection_start': 483L,
        'zoom': 0L},
                       loc('../../../../../private/tmp/untitled-2.py'): {'at'\
        'trib-starts': [('mygen|0|',
                         0)],
        'code-line': '    ',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 13L,
        'selection_end': 17L,
        'selection_start': 17L,
        'zoom': 0L},
                       loc('../../../../../usr/local/lib/python3.9/site-packages/scipy/signal/signaltools.py'): {'a'\
        'ttrib-starts': [('resample|0|',
                          2775)],
        'code-line': '            W_real = W.copy()\n',
        'first-line': 2888L,
        'folded-linenos': [],
        'sel-line': 2894L,
        'sel-line-start': 96986L,
        'selection_end': 97015L,
        'selection_start': 97015L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/nima/.pyenv/shims/python3')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'writer',
                         u'SummaryWriter',
                         u'tensorboardX',
                         u'minida']
testing.stored-results = (1,
                          [],
                          {})
